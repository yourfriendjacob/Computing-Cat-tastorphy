setwd("C:/Users/19132/source/repos/CS5565/Datasets")
getwd()
# CS5565 Assignment #1
# Group name: Computing Cat-tastorphy
# Members: Sehtab Hossain, Michelle Lu, Salam Othman, Jacob Sauther, Feng Zheng
# ISLR 2.4 Applied Problem 8
# a) Load data from College.csv into object called college
college = read.csv("College.csv")
# b) View loaded data
# Create column with names of each college (from 1st column of data)
rownames(college) = college[, 1]
View(college)
# Delete first column where names are also stored
college = college[,-1]
View(college)
# c) Generate summary of all variables in data set
summary(college)
# Generate scatterplot of first 10 columns in data
pairs(college[, 2:10])
# Produce side by side boxplots of Outstate vs Private
boxplot(college$Outstate ~ college$Private, ylab = "Out of state tuition (in $)", xlab= "Private (Y/N)")
# Create a new variable, Elite, by dividing universities into 2 groups based on whether or not
# the proportion of students coming from top 10% of high school classes exceeds 50%
# Vector of "no" values matching the number of rows in college data set
Elite = rep("No", nrow(college))
# Assign "Yes" to values in Elite that correspond to colleges where > 50% of the class comes from top 10% of high school class
Elite[college$Top10perc > 50] = "Yes"
# Encodes values in Elite as factors
Elite = as.factor(Elite)
# Add Elite column to college data
college = data.frame(college, Elite)
# Use summary function to view number of elite colleges
summary(college$Elite)
View(college$Elite)
# Produce side by side boxplots of Outstate vs Elite
boxplot(college$Outstate ~ college$Elite, ylab = "Out of state tuition (in $)", xlab= "Elite (Y/N)")
# Partitions graph window into multiple graphs; in this case 2 x 2 graphs
par(mfrow = c(2, 2))
hist(college$S.F.Ratio, xlab = "Student-Faculty Ratio", main = "Histogram for all colleges")
hist(college$S.F.Ratio[college$Private == "Yes"], xlab = "Student-Faculty Ratio", main = "Histogram for private schools")
hist(college$S.F.Ratio[college$Private == "No"], xlab = "Student-Faculty Ratio", main = "Histogram for public schools")
hist(college$S.F.Ratio[college$Elite == "Yes"], xlab = "Student-Faculty Ratio", main = "Histogram for elite schools")
# Create variable for acceptance rate and add it to college data set
AcceptPerc = college$Accept / college$Apps * 100
college = data.frame(college, AcceptPerc)
par(mfrow = c(1, 2))
plot(college$AcceptPerc, college$Terminal, ylab = "% Faculty with terminal degree", xlab = "Acceptance rate")
boxplot(college$Terminal ~ college$Elite, xlab = "Elite", ylab = "% Faculty with terminal degree")
summary(college$AcceptPerc)
# Check data on % of faculty with terminal degrees for non Elite and Elite colleges
summary(college$Terminal[college$Elite == "Yes"])
summary(college$Terminal[college$Elite == "No"])
# Check data on acceptance rate for colleges given % of faculty with terminal degrees
summary(college$AcceptPerc[college$Terminal > 80])
summary(college$AcceptPerc[college$Terminal <= 80])
# Findings:
# The median % of faculty with terminal degrees was lower at non elite colleges
# The median acceptance rate at colleges where 80% or less of faculty had terminal degrees was higher than
# at colleges where more than 80% of faculty had terminal degrees
# ISLR 2.4 Applied Problem 9
# Load data from Auto.csv into object called Auto, replace all ? strings with NA
# header = TRUE: first row of data contains variable names
Auto = read.csv("Auto.csv", header = TRUE, na.strings = "?")
# Remove missing values from data
Auto = na.omit(Auto)
# Check to make sure all NA values have been removed (will only return object if there are no missing values)
na.fail(Auto)
# a) Determine the class of each variable in data set
sapply(Auto, class)
# Qualitative predictors: origin, name
# Quantitative predictors: mpg, cylinders, displacement, horsepower, weight, acceleration, year
# b) Find range of each quantitative predictor
range(Auto$mpg)
range(Auto$cylinders)
range(Auto$displacement)
range(Auto$horsepower)
range(Auto$weight)
range(Auto$acceleration)
# c) Find mean and st. dev of each quantitative predictor
colMeans(Auto[,1:7])
# MARGIN = 2 references to applying st. dev function over columns
apply(Auto[, 1:7], MARGIN = 2, FUN = "sd")
# d) Remove 10th through 85th values (rows 10-85), then apply function to find range, mean, and st. dev of quantitative predictors
apply(Auto[-(10:85), 1:7], MARGIN = 2, FUN = "range")
apply(Auto[-(10:85), 1:7], MARGIN = 2, FUN = "mean")
apply(Auto[-(10:85), 1:7], MARGIN = 2, FUN = "sd")
# e) and f)
# Looking at the relationship between origin and mpg, origin and horsepower, and origin and weight
par(mfrow = c(1, 3))
boxplot(Auto$mpg ~ Auto$origin, ylab = "Miles per gallon", xlab= "Origin")
boxplot(Auto$horsepower ~ Auto$origin, ylab = "Horsepower", xlab= "Origin")
boxplot(Auto$weight ~ Auto$origin, ylab = "Weight", xlab= "Origin")
# Findings: The cars from origin "3" (Japanese) had the highest mpg and also the lowest weight, which makes sense
# as lowering the weight improves fuel economy. Origin "1" (US) cars had the lowest mpg but also highest horsepower and weight
par(mfrow = c(2, 2))
plot(Auto$horsepower, Auto$mpg, xlab = "Horsepower", ylab = "Miles per gallon")
plot(Auto$year, Auto$mpg, xlab = "Model Year", ylab = "Miles per gallon")
plot(Auto$weight, Auto$mpg, xlab = "Weight", ylab = "Miles per gallon")
plot(Auto$cylinders, Auto$mpg, xlab = "Number of cylinders", ylab = "Miles per gallon")
# Findings: Weight and (interestingly) horsepower are negatively correlated with mpg. There is a weak positive relationship
# between model year and mpg which suggests newer cars have better fuel economy. High horsepower cars tend to be luxury or sports cars
# where fuel economy isn't a major consideration.
# Overall, for quantitative predictors horsepower, weight, and year showed stronger relationships
# with mpg to serve as good predictors, whereas for qualitative predictors origin could be a good predictor for mpg, since
# each level of origin had a distinctive range of values for mpg.
# ISLR 2.4 Applied Problem 10
# a) Load the Boston data set from the MASS library
library(MASS)
View(Boston)
?Boston
# Retrieves dimensions of Boston data set
dim(Boston)
# There are 506 rows representing tracts of land in Boston's suburbs. There are 20 columns representing various demographic information about the tract of land and the housing on it.
# b)
summary(Boston$crim)
summary(Boston$tax)
summary(Boston$ptratio)
help(pairs)
par(mfrow = c(2, 2))
plot(Boston$indus, Boston$medv, xlab = "Proportion of non-retail business acres", ylab = "Median home value (in $1000s)")
plot(Boston$age, Boston$medv, xlab = "Proportion of homes built before 1940", ylab = "Median home value (in $1000s)")
plot(Boston$age, Boston$nox, xlab = "Proportion of homes built before 1940", ylab = "Nitrogen oxide concentration (pp/10 million)")
plot(Boston$ptratio, Boston$tax, xlab = "Pupil-to-teacher ratio", ylab = "Property tax rate (per $10000)")
par(mfrow = c(2, 2))
plot(Boston$indus, Boston$crim, xlab = "Proportion of non-retail business acres", ylab = "Per capital crime rate")
plot(Boston$ptratio, Boston$crim, xlab = "Pupil-to-teacher ratio", ylab = "Per capital crime rate")
plot(Boston$dis, Boston$crim, xlab = "Average distance to 5 employment centers", ylab = "Per capital crime rate")
plot(Boston$lstat, Boston$crim, xlab = "Lower status of population (%)", ylab = "Per capital crime rate")
par(mfrow = c(2, 2))
plot(Boston$indus, Boston$crim, xlab = "Proportion of non-retail business acres", ylab = "Per capital crime rate")
plot(Boston$ptratio, Boston$crim, xlab = "Pupil-to-teacher ratio", ylab = "Per capital crime rate")
plot(Boston$dis, Boston$crim, xlab = "Average distance to 5 employment centers", ylab = "Per capital crime rate")
plot(Boston$tax, Boston$crim, xlab = "Lower status of population (%)", ylab = "Per capital crime rate")
par(mfrow = c(2, 2))
plot(Boston$age, Boston$crim, xlab = "Proportion of homes built before 1940", ylab = "Per capital crime rate")
plot(Boston$lstat, Boston$crim, xlab = "Proportion of lower status residents", ylab = "Per capital crime rate")
plot(Boston$medv, Boston$crim, xlab = "Median home value", ylab = "Per capital crime rate")
boxplot(Boston$nox, Boston$crim, xlab = "Proportion of lower status residents", ylab = "Per capital crime rate")
help("count.fields")
# e)
sum(Boston$chas)
help("min")
min(Boston$medv)
min(Boston$medv)
View(Boston[Boston$medv == 5])
min(Boston$medv)
Boston[Boston$medv == 5]
min(Boston$medv)
Boston[Boston$medv == 5,]
par(mfrow = c(2, 2))
hist(Boston$crim, xlab = "Per capita crime rate")
hist(Boston$tax, xlab = "Property ax rate (per $10000)", main = "Histogram of Boston tax rates")
hist(Boston$ptratio, xlab = "Pupil-teacher ratio", main = "Histogram of Boston pupil-teacher ratios")
summary(Boston$crim)
summary(Boston$tax)
summary(Boston$ptratio)
sum(Boston$rm > 7)
sum(Boston$rm > 8)
Boston[Boston$rm > 7,]
Boston[Boston$rm > 8,]
# There are 64 tracts that average more than 7 rooms per dwelling, and 13 that average more than 8 rooms per dwelling
summary(Boston$rm > 8,)
# There are 64 tracts that average more than 7 rooms per dwelling, and 13 that average more than 8 rooms per dwelling
summary(Boston$rm > 8)
# There are 64 tracts that average more than 7 rooms per dwelling, and 13 that average more than 8 rooms per dwelling
summary(Boston[Boston$rm > 8,])
summary(Boston)
# Load Auto dataset into Auto object and remove all NA values
Auto = read.csv("../input/ISLR-Auto/Auto.csv", header = TRUE, na.strings = "?")
setwd("C:/Users/19132/source/repos/CS5565/Datasets")
getwd
getwd()
# Load Auto dataset into Auto object and remove all NA values
Auto = read.csv("../input/ISLR-Auto/Auto.csv", header = TRUE, na.strings = "?")
lm(mpg ~ horsepower, data = Auto)
Auto.fit = lm(mpg ~ horsepower, data = Auto)
summary(Auto.fit)
help("predict")
predict(Auto.fit, horsepower=98)
predict(Auto.fit, horsepower = 98)
predict(Auto.fit, data.frame(horsepower = 98))
predict(Auto.fit, data.frame(horsepower = 98), interval = "confidence")
predict(Auto.fit, data.frame(horsepower = 98), interval = "prediction")
help(abline)
# b) Use the response variable mpg and predictor horsepower to generate a scatterplot
plot(Auto$horsepower, Auto$mpg, xlab = "Horsepower", ylab = "Miles per gallon")
# Generate the least squares regression line
abline(Auto.fit)
# Generate the least squares regression line
abline(Auto.fit, lwd= 3, col = "red")
# c) Produce diagnostic plots of the least squares regression fit
plot(Auto.fit)
plot(Auto.fit)
par(mfrow = c(2, 2))
plot(Auto.fit)
View(Auto)
help(pairs)
# Produce a scatterplot with all the variables in the data set
pairs(~mpg + cylinders + displacement + horsepower + weight + acceleration + year, Auto)
pairs(Auto[,1:7])
cor(Auto[,1:7])
lm(mpg~ cylinders + displacement + horsepower + weight + acceleration + year, data = Auto)
lm(formula = mpg~ cylinders + displacement + horsepower + weight + acceleration + year, data = Auto)
mpg.mlr= lm(formula = mpg~ cylinders + displacement + horsepower + weight + acceleration + year, data = Auto)
summary(mpg.mlr)
mpg.mlr= lm(mpg ~ . - name, data = Auto)
summary(mpg.mlr)
mpg.mlr= lm(formula = mpg ~ . - name, data = Auto)
summary(mpg.mlr)
pairs(Auto[,1:7])
# b) Compute the matrix of correlations between the quantitative variables
cor(Auto[,1:7])
# c) Perform a multiple linear regression using mpg as the response variable
mpg.mlr= lm(mpg ~ . - name, data = Auto)
summary(mpg.mlr)
mpg.mlr= lm(formula = mpg~ cylinders + displacement + horsepower + weight + acceleration + year, data = Auto)
summary(mpg.mlr)
mpg.mlr= lm(mpg~ cylinders + displacement + horsepower + weight + acceleration + year, data = Auto)
summary(mpg.mlr)
mpg.mlr= lm(mpg~ . -name, data = Auto)
summary(mpg.mlr)
# CS5565 Assignment #1
# Group name: Computing Cat-tastorphy
# Members: Sehtab Hossain, Michelle Lu, Salam Othman, Jacob Sauther, Feng Zheng
# ISLR 3.7 Applied Problem 8
# Load Auto dataset into Auto object and remove all NA values
Auto = read.csv("Auto.csv", header = TRUE, na.strings = "?")
Auto = na.omit(Auto)
# a) Perform a simple linear regression with horsepower as predictor and mpg as the response
Auto.fit = lm(mpg ~ horsepower, data = Auto)
summary(Auto.fit)
# The relationship between the predictor and response is written as mpg = -0.1578 horsepower + 39.9359
# There is a negative relationship between the predictor and response since the coefficient in front of horsepower
# is negative. There is a moderately strong relationship between horsepower and mpg since the R^2 statistic is 0.6059.
# Using the linear fit, predict mpg associated with a horsepower of 98
predict(Auto.fit, data.frame(horsepower = 98))
# Associated 95 % confidence and prediction intervals given horsepower of 98
predict(Auto.fit, data.frame(horsepower = 98), interval = "confidence")
predict(Auto.fit, data.frame(horsepower = 98), interval = "prediction")
# b) Use the response variable mpg and predictor horsepower to generate a scatterplot
plot(Auto$horsepower, Auto$mpg, xlab = "Horsepower", ylab = "Miles per gallon")
# Generate the least squares regression line with a line width of 3 and red color for visibility
abline(Auto.fit, lwd= 3, col = "red")
# c) Produce diagnostic plots of the least squares regression fit
par(mfrow = c(2, 2))
plot(Auto.fit)
# Findings: The presence of a U-shaped pattern in the residuals plot indicates there is not a linear relationship between
# the predictor and response variables.
# ISLR 3.7 Applied Problem 9
# Replace the values in origin with their meanings, and convert the variable into a factor
Auto$origin[Auto$origin == 1] = "American"
Auto$origin[Auto$origin == 2] = "European"
Auto$origin[Auto$origin == 3] = "Japanese"
Auto$origin = as.factor(Auto$origin)
# a) Produce a scatterplot with all the quantitative variables in the data set
pairs(Auto[,1:7])
# b) Compute the matrix of correlations between the quantitative variables
cor(Auto[,1:7])
# c) Perform a multiple linear regression using mpg as the response variable
mpg.mlr= lm(mpg~ . -name, data = Auto)
summary(mpg.mlr)
help(contrasts)
par(mfrow = c(2, 2))
plot(mpg.mlr)
mpg.fit.all.interactions = lm(mpg ~ (. - name)^2, data = Auto)
summary(mpg.fit.all.interactions)
View(college)
View(college)
View(mpg.fit.all.interactions)
View(college)
View(college)
summary(lm(mpg ~ . + cylinders:displacement - name, data = Auto))
par(mfrow = c(2, 2))
plot(Auto$displacement, Auto$mpg)
plot(Auto$horsepower, Auto$mpg)
plot(Auto$weight, Auto$mpg)
plot(Auto$acceleration, Auto$mpg)
View(Auto.fit)
acceleration.linear = lm(mpg ~ acceleration, data = Auto)
summary(acceleration.linear)
acceleration.quadratic = lm(mpg ~ I(acceleration^2), data = Auto)
summary(acceleration.quadratic)
displacement.linear = lm(mpg ~ displacement, data = Auto)
summary(displacement.linear)
displacement.quadratic = lm(mpg ~ I(displacement^2), data = Auto)
summary(displacement.quadratic)
displacement.quadratic = lm(mpg ~ displacement + I(displacement^2))
displacement.quadratic = lm(mpg ~ displacement + I(displacement^2), data = Auto)
summary(displacement.quadratic)
acceleration.linear= lm(mpg ~ acceleration, data = Auto)
summary(acceleration.linear)
acceleration.sqrt= lm(mpg ~ sqrt(acceleration), data = Auto)
summary(acceleration.sqrt)
